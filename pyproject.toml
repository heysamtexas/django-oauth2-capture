[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "oauth2_capture"
version = "0.1.0"
authors = [{name = "Sam Texas", email = "github+oauth2_capture@simplecto.com"}]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
description = "Capture and store OAuth2 tokens for later use."
dependencies = [
    "requests",
    "shortuuid==1.0.13"
]

[project.optional-dependencies]

dev = [
    "ruff==0.6.9",
    "pre-commit==4.0.1",
    "flit==3.9.0",
]


[project.urls]
Home = "https://github.com/heysamtexas/oauth2_capture"
Documentation = "https://github.com/heysamtexas/oauth2_capture#readme"
Source = "https://github.com/heysamtexas/oauth2_capture"
Issues = "https://github.com/heysamtexas/oauth2_capture/issues"


[tool.ruff]

# Set the maximum line length to 120.
line-length = 120
target-version = "py312"
exclude = [
    "pyproject.toml",
    "*/**/tests/*",
    "*/**/migrations/*",
    ".idea/**",
    "development/manage.py",
]


[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
ignore = [
    "ANN101",
    "E501",
    "D203",
    "D213",
    "D100",
    "COM812"
]
select = ["ALL", "W2", "I"]
exclude = [
    "pyproject.toml",
    "*/**/tests/**",
    "*/**/migrations/**",
    ".idea/**",
    "development/manage.py",
]

[tool.bandit]
exclude = ["development/**/tests/**", "development/**/migrations/*"]
skips = ["B106"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.2"
tag_format = "$version"
bump_message = "bump: version $current_version â†’ $new_version"
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"
changelog_incremental = true
version_files = [
    "pyproject.toml:^version",
]
